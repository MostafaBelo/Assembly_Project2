(()=>{"use strict";class s{address_size=24;S=0;L=0;C=0;associativity=0;accesses=0;hits=0;miss=0;memory_time=0;missPenalty=120;hitPenalty=1;mem={};constructor(s=0,t=0,i=0){this.S=s,this.L=t,this.C=this.S/this.L,this.associativity=i}setPenalty(s=120,t=1){this.missPenalty=s,this.hitPenalty=t}isIndexInCache(s){return(s=parseInt(s,2))in this.mem}isvalid(s,t){for(let i=s=parseInt(s,2);i<s+this.associativity;i++)if(i in this.mem&&this.mem[i].valid&&this.mem[i].tag===t)return!0;return!1}getRandomInt(s,t){return Math.floor(Math.random()*(t-s)+s)}setAddressSize(s=24){this.address_size=s}read(s){console.log("reading address: "+s),s=function(s,t=32){if(1==s>>t-1){let i=1;for(let s=0;s<32-t-1;s++)i<<=1,i|=1;i<<=t,s|=i}return(s>>>0).toString(2).padStart(t,"0")}(s,this.address_size);let t=Math.log2(this.L),i=Math.log2(this.C/this.associativity),e=this.address_size-t-i;console.log("offsetSize: "+t+" indexSize: "+i+" tagSize: "+e);let a=s.slice(0,e),h=s.slice(e,e+i),r=s.slice(e+i,this.address_size);this.isIndexInCache(h)&&this.isvalid(h,a)?(this.accesses++,this.hits++,this.memory_time+=this.hitPenalty):(this.accesses++,this.write(a,h,r))}getAMAT(){return this.memory_time/this.accesses}write(s,t,i){console.log("writing tag: "+s+" index: "+t+" offset: "+i),this.miss++,this.memory_time+=this.missPenalty;for(let i=t=parseInt(t,2);i<t+this.associativity;i++)if(!(i in this.mem))return void(this.mem[i]={valid:!0,tag:s});t=this.getRandomInt(t,t+this.associativity),this.mem[t]={valid:!0,tag:s}}init(s=0,t=0,i=0){this.S=s,this.L=t,this.C=this.S/this.L,this.associativity=i,this.accesses=0,this.hits=0,this.miss=0,this.memory_time=0,this.mem={}}}new s;let t=new s;t.init(16384,16,1),t.setAddressSize(32),t.read(0),console.log(t.mem),t.read(0),t.read(100),t.read(0),t.read(16384),t.read(16484),t.read(0),console.log("something")})();